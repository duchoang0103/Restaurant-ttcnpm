{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\NguyenDucTuan\\\\Desktop\\\\07-frontend-updating-a-post\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\NguyenDucTuan\\\\Desktop\\\\07-frontend-updating-a-post\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\NguyenDucTuan\\\\Desktop\\\\07-frontend-updating-a-post\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\NguyenDucTuan\\\\Desktop\\\\07-frontend-updating-a-post\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\NguyenDucTuan\\\\Desktop\\\\07-frontend-updating-a-post\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\NguyenDucTuan\\\\Desktop\\\\07-frontend-updating-a-post\\\\src\\\\pages\\\\Feed\\\\Feed.js\";\nimport React, { Component, Fragment } from 'react'; // import Post from '../../components/Feed/Post/Post';\n// import Button from '../../components/Button/Button';\n// import FeedEdit from '../../components/Feed/FeedEdit/FeedEdit';\n// import Input from '../../components/Form/Input/Input';\n// import Paginator from '../../components/Paginator/Paginator';\n// import Loader from '../../components/Loader/Loader';\n// import ErrorHandler from '../../components/ErrorHandler/ErrorHandler';\n\nimport './Feed.css';\n\nvar Feed = /*#__PURE__*/function (_Component) {\n  _inherits(Feed, _Component);\n\n  function Feed() {\n    _classCallCheck(this, Feed);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Feed).apply(this, arguments));\n  }\n\n  _createClass(Feed, [{\n    key: \"render\",\n    // state = {\n    //   isEditing: false,\n    //   posts: [],\n    //   totalPosts: 0,\n    //   editPost: null,\n    //   status: '',\n    //   postPage: 1,\n    //   postsLoading: true,\n    //   editLoading: false\n    // };\n    // componentDidMount() {\n    //   fetch('URL')\n    //     .then(res => {\n    //       if (res.status !== 200) {\n    //         throw new Error('Failed to fetch user status.');\n    //       }\n    //       return res.json();\n    //     })\n    //     .then(resData => {\n    //       this.setState({ status: resData.status });\n    //     })\n    //     .catch(this.catchError);\n    //   this.loadPosts();\n    // }\n    // loadPosts = direction => {\n    //   if (direction) {\n    //     this.setState({ postsLoading: true, posts: [] });\n    //   }\n    //   let page = this.state.postPage;\n    //   if (direction === 'next') {\n    //     page++;\n    //     this.setState({ postPage: page });\n    //   }\n    //   if (direction === 'previous') {\n    //     page--;\n    //     this.setState({ postPage: page });\n    //   }\n    //   fetch('http://localhost:8080/feed/posts')\n    //     .then(res => {\n    //       if (res.status !== 200) {\n    //         throw new Error('Failed to fetch posts.');\n    //       }\n    //       return res.json();\n    //     })\n    //     .then(resData => {\n    //       this.setState({\n    //         posts: resData.posts.map(post => {\n    //           return {\n    //             ...post,\n    //             imagePath: post.imageUrl\n    //           };\n    //         }),\n    //         totalPosts: resData.totalItems,\n    //         postsLoading: false\n    //       });\n    //     })\n    //     .catch(this.catchError);\n    // };\n    // statusUpdateHandler = event => {\n    //   event.preventDefault();\n    //   fetch('URL')\n    //     .then(res => {\n    //       if (res.status !== 200 && res.status !== 201) {\n    //         throw new Error(\"Can't update status!\");\n    //       }\n    //       return res.json();\n    //     })\n    //     .then(resData => {\n    //       console.log(resData);\n    //     })\n    //     .catch(this.catchError);\n    // };\n    // newPostHandler = () => {\n    //   this.setState({ isEditing: true });\n    // };\n    // startEditPostHandler = postId => {\n    //   this.setState(prevState => {\n    //     const loadedPost = { ...prevState.posts.find(p => p._id === postId) };\n    //     return {\n    //       isEditing: true,\n    //       editPost: loadedPost\n    //     };\n    //   });\n    // };\n    // cancelEditHandler = () => {\n    //   this.setState({ isEditing: false, editPost: null });\n    // };\n    // finishEditHandler = postData => {\n    //   this.setState({\n    //     editLoading: true\n    //   });\n    //   const formData = new FormData();\n    //   formData.append('title', postData.title);\n    //   formData.append('content', postData.content);\n    //   formData.append('image', postData.image);\n    //   let url = 'http://localhost:8080/feed/post';\n    //   let method = 'POST';\n    //   if (this.state.editPost) {\n    //     url = 'http://localhost:8080/feed/post/' + this.state.editPost._id;\n    //     method = 'PUT';\n    //   }\n    //   fetch(url, {\n    //     method: method,\n    //     body: formData\n    //   })\n    //     .then(res => {\n    //       if (res.status !== 200 && res.status !== 201) {\n    //         throw new Error('Creating or editing a post failed!');\n    //       }\n    //       return res.json();\n    //     })\n    //     .then(resData => {\n    //       console.log(resData);\n    //       const post = {\n    //         _id: resData.post._id,\n    //         title: resData.post.title,\n    //         content: resData.post.content,\n    //         creator: resData.post.creator,\n    //         createdAt: resData.post.createdAt\n    //       };\n    //       this.setState(prevState => {\n    //         let updatedPosts = [...prevState.posts];\n    //         if (prevState.editPost) {\n    //           const postIndex = prevState.posts.findIndex(\n    //             p => p._id === prevState.editPost._id\n    //           );\n    //           updatedPosts[postIndex] = post;\n    //         } else if (prevState.posts.length < 2) {\n    //           updatedPosts = prevState.posts.concat(post);\n    //         }\n    //         return {\n    //           posts: updatedPosts,\n    //           isEditing: false,\n    //           editPost: null,\n    //           editLoading: false\n    //         };\n    //       });\n    //     })\n    //     .catch(err => {\n    //       console.log(err);\n    //       this.setState({\n    //         isEditing: false,\n    //         editPost: null,\n    //         editLoading: false,\n    //         error: err\n    //       });\n    //     });\n    // };\n    // statusInputChangeHandler = (input, value) => {\n    //   this.setState({ status: value });\n    // };\n    // deletePostHandler = postId => {\n    //   this.setState({ postsLoading: true });\n    //   fetch('URL')\n    //     .then(res => {\n    //       if (res.status !== 200 && res.status !== 201) {\n    //         throw new Error('Deleting a post failed!');\n    //       }\n    //       return res.json();\n    //     })\n    //     .then(resData => {\n    //       console.log(resData);\n    //       this.setState(prevState => {\n    //         const updatedPosts = prevState.posts.filter(p => p._id !== postId);\n    //         return { posts: updatedPosts, postsLoading: false };\n    //       });\n    //     })\n    //     .catch(err => {\n    //       console.log(err);\n    //       this.setState({ postsLoading: false });\n    //     });\n    // };\n    // errorHandler = () => {\n    //   this.setState({ error: null });\n    // };\n    // catchError = error => {\n    //   this.setState({ error: error });\n    // };\n    value: function render() {\n      var _this = this;\n\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(ErrorHandler, {\n        error: this.state.error,\n        onHandle: this.errorHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(FeedEdit, {\n        editing: this.state.isEditing,\n        selectedPost: this.state.editPost,\n        loading: this.state.editLoading,\n        onCancelEdit: this.cancelEditHandler,\n        onFinishEdit: this.finishEditHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"section\", {\n        className: \"feed__status\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.statusUpdateHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        placeholder: \"Your status\",\n        control: \"input\",\n        onChange: this.statusInputChangeHandler,\n        value: this.state.status,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        mode: \"flat\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }\n      }, \"Update\"))), /*#__PURE__*/React.createElement(\"section\", {\n        className: \"feed__control\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        mode: \"raised\",\n        design: \"accent\",\n        onClick: this.newPostHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }\n      }, \"New Post\")), /*#__PURE__*/React.createElement(\"section\", {\n        className: \"feed\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 9\n        }\n      }, this.state.postsLoading && /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          textAlign: 'center',\n          marginTop: '2rem'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Loader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 15\n        }\n      })), this.state.posts.length <= 0 && !this.state.postsLoading ? /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          textAlign: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }\n      }, \"No posts found.\") : null, !this.state.postsLoading && /*#__PURE__*/React.createElement(Paginator, {\n        onPrevious: this.loadPosts.bind(this, 'previous'),\n        onNext: this.loadPosts.bind(this, 'next'),\n        lastPage: Math.ceil(this.state.totalPosts / 2),\n        currentPage: this.state.postPage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }\n      }, this.state.posts.map(function (post) {\n        return /*#__PURE__*/React.createElement(Post, {\n          key: post._id,\n          id: post._id,\n          author: post.creator.name,\n          date: new Date(post.createdAt).toLocaleDateString('en-US'),\n          title: post.title,\n          image: post.imageUrl,\n          content: post.content,\n          onStartEdit: _this.startEditPostHandler.bind(_this, post._id),\n          onDelete: _this.deletePostHandler.bind(_this, post._id),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 17\n          }\n        });\n      }))));\n    }\n  }]);\n\n  return Feed;\n}(Component);\n\nexport default Feed;","map":{"version":3,"sources":["C:/Users/NguyenDucTuan/Desktop/07-frontend-updating-a-post/src/pages/Feed/Feed.js"],"names":["React","Component","Fragment","Feed","state","error","errorHandler","isEditing","editPost","editLoading","cancelEditHandler","finishEditHandler","statusUpdateHandler","statusInputChangeHandler","status","newPostHandler","postsLoading","textAlign","marginTop","posts","length","loadPosts","bind","Math","ceil","totalPosts","postPage","map","post","_id","creator","name","Date","createdAt","toLocaleDateString","title","imageUrl","content","startEditPostHandler","deletePostHandler"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,YAAP;;IAEMC,I;;;;;;;;;;;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;6BAES;AAAA;;AACP,0BACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,YAAD;AAAc,QAAA,KAAK,EAAE,KAAKC,KAAL,CAAWC,KAAhC;AAAuC,QAAA,QAAQ,EAAE,KAAKC,YAAtD;AAAA;AAAA;AAAA;A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","sourcesContent":["import React, { Component, Fragment } from 'react';\n\n// import Post from '../../components/Feed/Post/Post';\n// import Button from '../../components/Button/Button';\n// import FeedEdit from '../../components/Feed/FeedEdit/FeedEdit';\n// import Input from '../../components/Form/Input/Input';\n// import Paginator from '../../components/Paginator/Paginator';\n// import Loader from '../../components/Loader/Loader';\n// import ErrorHandler from '../../components/ErrorHandler/ErrorHandler';\nimport './Feed.css';\n\nclass Feed extends Component {\n  // state = {\n  //   isEditing: false,\n  //   posts: [],\n  //   totalPosts: 0,\n  //   editPost: null,\n  //   status: '',\n  //   postPage: 1,\n  //   postsLoading: true,\n  //   editLoading: false\n  // };\n\n  // componentDidMount() {\n  //   fetch('URL')\n  //     .then(res => {\n  //       if (res.status !== 200) {\n  //         throw new Error('Failed to fetch user status.');\n  //       }\n  //       return res.json();\n  //     })\n  //     .then(resData => {\n  //       this.setState({ status: resData.status });\n  //     })\n  //     .catch(this.catchError);\n\n  //   this.loadPosts();\n  // }\n\n  // loadPosts = direction => {\n  //   if (direction) {\n  //     this.setState({ postsLoading: true, posts: [] });\n  //   }\n  //   let page = this.state.postPage;\n  //   if (direction === 'next') {\n  //     page++;\n  //     this.setState({ postPage: page });\n  //   }\n  //   if (direction === 'previous') {\n  //     page--;\n  //     this.setState({ postPage: page });\n  //   }\n  //   fetch('http://localhost:8080/feed/posts')\n  //     .then(res => {\n  //       if (res.status !== 200) {\n  //         throw new Error('Failed to fetch posts.');\n  //       }\n  //       return res.json();\n  //     })\n  //     .then(resData => {\n  //       this.setState({\n  //         posts: resData.posts.map(post => {\n  //           return {\n  //             ...post,\n  //             imagePath: post.imageUrl\n  //           };\n  //         }),\n  //         totalPosts: resData.totalItems,\n  //         postsLoading: false\n  //       });\n  //     })\n  //     .catch(this.catchError);\n  // };\n\n  // statusUpdateHandler = event => {\n  //   event.preventDefault();\n  //   fetch('URL')\n  //     .then(res => {\n  //       if (res.status !== 200 && res.status !== 201) {\n  //         throw new Error(\"Can't update status!\");\n  //       }\n  //       return res.json();\n  //     })\n  //     .then(resData => {\n  //       console.log(resData);\n  //     })\n  //     .catch(this.catchError);\n  // };\n\n  // newPostHandler = () => {\n  //   this.setState({ isEditing: true });\n  // };\n\n  // startEditPostHandler = postId => {\n  //   this.setState(prevState => {\n  //     const loadedPost = { ...prevState.posts.find(p => p._id === postId) };\n\n  //     return {\n  //       isEditing: true,\n  //       editPost: loadedPost\n  //     };\n  //   });\n  // };\n\n  // cancelEditHandler = () => {\n  //   this.setState({ isEditing: false, editPost: null });\n  // };\n\n  // finishEditHandler = postData => {\n  //   this.setState({\n  //     editLoading: true\n  //   });\n  //   const formData = new FormData();\n  //   formData.append('title', postData.title);\n  //   formData.append('content', postData.content);\n  //   formData.append('image', postData.image);\n  //   let url = 'http://localhost:8080/feed/post';\n  //   let method = 'POST';\n  //   if (this.state.editPost) {\n  //     url = 'http://localhost:8080/feed/post/' + this.state.editPost._id;\n  //     method = 'PUT';\n  //   }\n\n  //   fetch(url, {\n  //     method: method,\n  //     body: formData\n  //   })\n  //     .then(res => {\n  //       if (res.status !== 200 && res.status !== 201) {\n  //         throw new Error('Creating or editing a post failed!');\n  //       }\n  //       return res.json();\n  //     })\n  //     .then(resData => {\n  //       console.log(resData);\n  //       const post = {\n  //         _id: resData.post._id,\n  //         title: resData.post.title,\n  //         content: resData.post.content,\n  //         creator: resData.post.creator,\n  //         createdAt: resData.post.createdAt\n  //       };\n  //       this.setState(prevState => {\n  //         let updatedPosts = [...prevState.posts];\n  //         if (prevState.editPost) {\n  //           const postIndex = prevState.posts.findIndex(\n  //             p => p._id === prevState.editPost._id\n  //           );\n  //           updatedPosts[postIndex] = post;\n  //         } else if (prevState.posts.length < 2) {\n  //           updatedPosts = prevState.posts.concat(post);\n  //         }\n  //         return {\n  //           posts: updatedPosts,\n  //           isEditing: false,\n  //           editPost: null,\n  //           editLoading: false\n  //         };\n  //       });\n  //     })\n  //     .catch(err => {\n  //       console.log(err);\n  //       this.setState({\n  //         isEditing: false,\n  //         editPost: null,\n  //         editLoading: false,\n  //         error: err\n  //       });\n  //     });\n  // };\n\n  // statusInputChangeHandler = (input, value) => {\n  //   this.setState({ status: value });\n  // };\n\n  // deletePostHandler = postId => {\n  //   this.setState({ postsLoading: true });\n  //   fetch('URL')\n  //     .then(res => {\n  //       if (res.status !== 200 && res.status !== 201) {\n  //         throw new Error('Deleting a post failed!');\n  //       }\n  //       return res.json();\n  //     })\n  //     .then(resData => {\n  //       console.log(resData);\n  //       this.setState(prevState => {\n  //         const updatedPosts = prevState.posts.filter(p => p._id !== postId);\n  //         return { posts: updatedPosts, postsLoading: false };\n  //       });\n  //     })\n  //     .catch(err => {\n  //       console.log(err);\n  //       this.setState({ postsLoading: false });\n  //     });\n  // };\n\n  // errorHandler = () => {\n  //   this.setState({ error: null });\n  // };\n\n  // catchError = error => {\n  //   this.setState({ error: error });\n  // };\n\n  render() {\n    return (\n      <Fragment>\n        <ErrorHandler error={this.state.error} onHandle={this.errorHandler} />\n        <FeedEdit\n          editing={this.state.isEditing}\n          selectedPost={this.state.editPost}\n          loading={this.state.editLoading}\n          onCancelEdit={this.cancelEditHandler}\n          onFinishEdit={this.finishEditHandler}\n        />\n        <section className=\"feed__status\">\n          <form onSubmit={this.statusUpdateHandler}>\n            <Input\n              type=\"text\"\n              placeholder=\"Your status\"\n              control=\"input\"\n              onChange={this.statusInputChangeHandler}\n              value={this.state.status}\n            />\n            <Button mode=\"flat\" type=\"submit\">\n              Update\n            </Button>\n          </form>\n        </section>\n        <section className=\"feed__control\">\n          <Button mode=\"raised\" design=\"accent\" onClick={this.newPostHandler}>\n            New Post\n          </Button>\n        </section>\n        <section className=\"feed\">\n          {this.state.postsLoading && (\n            <div style={{ textAlign: 'center', marginTop: '2rem' }}>\n              <Loader />\n            </div>\n          )}\n          {this.state.posts.length <= 0 && !this.state.postsLoading ? (\n            <p style={{ textAlign: 'center' }}>No posts found.</p>\n          ) : null}\n          {!this.state.postsLoading && (\n            <Paginator\n              onPrevious={this.loadPosts.bind(this, 'previous')}\n              onNext={this.loadPosts.bind(this, 'next')}\n              lastPage={Math.ceil(this.state.totalPosts / 2)}\n              currentPage={this.state.postPage}\n            >\n              {this.state.posts.map(post => (\n                <Post\n                  key={post._id}\n                  id={post._id}\n                  author={post.creator.name}\n                  date={new Date(post.createdAt).toLocaleDateString('en-US')}\n                  title={post.title}\n                  image={post.imageUrl}\n                  content={post.content}\n                  onStartEdit={this.startEditPostHandler.bind(this, post._id)}\n                  onDelete={this.deletePostHandler.bind(this, post._id)}\n                />\n              ))}\n            </Paginator>\n          )}\n        </section>\n      </Fragment>\n    );\n  }\n}\n\nexport default Feed;\n"]},"metadata":{},"sourceType":"module"}