{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\NguyenDucTuan\\\\Desktop\\\\07-frontend-updating-a-post\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:\\\\Users\\\\NguyenDucTuan\\\\Desktop\\\\07-frontend-updating-a-post\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\Users\\\\NguyenDucTuan\\\\Desktop\\\\07-frontend-updating-a-post\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\NguyenDucTuan\\\\Desktop\\\\07-frontend-updating-a-post\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\NguyenDucTuan\\\\Desktop\\\\07-frontend-updating-a-post\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\NguyenDucTuan\\\\Desktop\\\\07-frontend-updating-a-post\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\NguyenDucTuan\\\\Desktop\\\\07-frontend-updating-a-post\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\NguyenDucTuan\\\\Desktop\\\\07-frontend-updating-a-post\\\\src\\\\pages\\\\Feed\\\\Food.js\";\nimport React, { Component, Fragment } from 'react'; // import Post from '../../components/Feed/Post/Post';\n// import Button from '../../components/Button/Button';\n// import FeedEdit from '../../components/Feed/FeedEdit/FeedEdit';\n// import Input from '../../components/Form/Input/Input';\n// import Paginator from '../../components/Paginator/Paginator';\n// import Loader from '../../components/Loader/Loader';\n// import ErrorHandler from '../../components/ErrorHandler/ErrorHandler';\n\nimport './Food.css';\n\nvar Food = /*#__PURE__*/function (_Component) {\n  _inherits(Food, _Component);\n\n  function Food() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Food);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Food)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isEditing: false,\n      posts: [],\n      totalPosts: 0,\n      editPost: null,\n      status: '',\n      postPage: 1,\n      postsLoading: true,\n      editLoading: false\n    };\n\n    _this.loadPosts = function (direction) {\n      if (direction) {\n        _this.setState({\n          postsLoading: true,\n          posts: []\n        });\n      }\n\n      var page = _this.state.postPage;\n\n      if (direction === 'next') {\n        page++;\n\n        _this.setState({\n          postPage: page\n        });\n      }\n\n      if (direction === 'previous') {\n        page--;\n\n        _this.setState({\n          postPage: page\n        });\n      }\n\n      var method = 'GET';\n\n      if (_this.state.editPost) {\n        url = 'http://localhost:8080/feed/post/' + _this.state.editPost._id;\n        method = 'PUT';\n      }\n\n      fetch(url, {\n        method: method,\n        body: formData\n      });\n      fetch('http://localhost:3001/product/getProducts').then(function (res) {\n        if (res.status !== 200) {\n          throw new Error('Failed to fetch posts.');\n        }\n\n        return res.json();\n      }).then(function (resData) {\n        _this.setState({\n          posts: resData.posts.map(function (post) {\n            return _objectSpread({}, post, {\n              imagePath: post.imageUrl\n            });\n          }),\n          totalPosts: resData.totalItems,\n          postsLoading: false\n        });\n      }).catch(_this.catchError);\n    };\n\n    _this.statusUpdateHandler = function (event) {\n      event.preventDefault();\n      fetch('URL').then(function (res) {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error(\"Can't update status!\");\n        }\n\n        return res.json();\n      }).then(function (resData) {\n        console.log(resData);\n      }).catch(_this.catchError);\n    };\n\n    _this.newPostHandler = function () {\n      _this.setState({\n        isEditing: true\n      });\n    };\n\n    _this.startEditPostHandler = function (postId) {\n      _this.setState(function (prevState) {\n        var loadedPost = _objectSpread({}, prevState.posts.find(function (p) {\n          return p._id === postId;\n        }));\n\n        return {\n          isEditing: true,\n          editPost: loadedPost\n        };\n      });\n    };\n\n    _this.cancelEditHandler = function () {\n      _this.setState({\n        isEditing: false,\n        editPost: null\n      });\n    };\n\n    _this.finishEditHandler = function (postData) {\n      _this.setState({\n        editLoading: true\n      });\n\n      var formData = new FormData();\n      formData.append('title', postData.title);\n      formData.append('content', postData.content);\n      formData.append('image', postData.image);\n      var url = 'http://localhost:8080/feed/post';\n      var method = 'POST';\n\n      if (_this.state.editPost) {\n        url = 'http://localhost:8080/feed/post/' + _this.state.editPost._id;\n        method = 'PUT';\n      }\n\n      fetch(url, {\n        method: method,\n        body: formData\n      }).then(function (res) {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Creating or editing a post failed!');\n        }\n\n        return res.json();\n      }).then(function (resData) {\n        console.log(resData);\n        var post = {\n          _id: resData.post._id,\n          title: resData.post.title,\n          content: resData.post.content,\n          creator: resData.post.creator,\n          createdAt: resData.post.createdAt\n        };\n\n        _this.setState(function (prevState) {\n          var updatedPosts = _toConsumableArray(prevState.posts);\n\n          if (prevState.editPost) {\n            var postIndex = prevState.posts.findIndex(function (p) {\n              return p._id === prevState.editPost._id;\n            });\n            updatedPosts[postIndex] = post;\n          } else if (prevState.posts.length < 2) {\n            updatedPosts = prevState.posts.concat(post);\n          }\n\n          return {\n            posts: updatedPosts,\n            isEditing: false,\n            editPost: null,\n            editLoading: false\n          };\n        });\n      }).catch(function (err) {\n        console.log(err);\n\n        _this.setState({\n          isEditing: false,\n          editPost: null,\n          editLoading: false,\n          error: err\n        });\n      });\n    };\n\n    _this.statusInputChangeHandler = function (input, value) {\n      _this.setState({\n        status: value\n      });\n    };\n\n    _this.deletePostHandler = function (postId) {\n      _this.setState({\n        postsLoading: true\n      });\n\n      fetch('URL').then(function (res) {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Deleting a post failed!');\n        }\n\n        return res.json();\n      }).then(function (resData) {\n        console.log(resData);\n\n        _this.setState(function (prevState) {\n          var updatedPosts = prevState.posts.filter(function (p) {\n            return p._id !== postId;\n          });\n          return {\n            posts: updatedPosts,\n            postsLoading: false\n          };\n        });\n      }).catch(function (err) {\n        console.log(err);\n\n        _this.setState({\n          postsLoading: false\n        });\n      });\n    };\n\n    _this.errorHandler = function () {\n      _this.setState({\n        error: null\n      });\n    };\n\n    _this.catchError = function (error) {\n      _this.setState({\n        error: error\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Food, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('URL').then(function (res) {\n        if (res.status !== 200) {\n          throw new Error('Failed to fetch user status.');\n        }\n\n        return res.json();\n      }).then(function (resData) {\n        _this2.setState({\n          status: resData.status\n        });\n      }).catch(this.catchError);\n      this.loadPosts();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 7\n        }\n      }, \"TU\\u1EA5n \\u0111\\xE3 v\\xE0o \\u0111\\xE2y trang FoodPage\", /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 9\n        }\n      }, \"D\\xE2y l\\xE0 userId\", this.props.userId)) // <Fragment>\n      //   <ErrorHandler error={this.state.error} onHandle={this.errorHandler} />\n      //   <FeedEdit\n      //     editing={this.state.isEditing}\n      //     selectedPost={this.state.editPost}\n      //     loading={this.state.editLoading}\n      //     onCancelEdit={this.cancelEditHandler}\n      //     onFinishEdit={this.finishEditHandler}\n      //   />\n      //   <section className=\"feed__status\">\n      //     <form onSubmit={this.statusUpdateHandler}>\n      //       <Input\n      //         type=\"text\"\n      //         placeholder=\"Your status\"\n      //         control=\"input\"\n      //         onChange={this.statusInputChangeHandler}\n      //         value={this.state.status}\n      //       />\n      //       <Button mode=\"flat\" type=\"submit\">\n      //         Update\n      //       </Button>\n      //     </form>\n      //   </section>\n      //   <section className=\"feed__control\">\n      //     <Button mode=\"raised\" design=\"accent\" onClick={this.newPostHandler}>\n      //       New Post\n      //     </Button>\n      //   </section>\n      //   <section className=\"feed\">\n      //     {this.state.postsLoading && (\n      //       <div style={{ textAlign: 'center', marginTop: '2rem' }}>\n      //         <Loader />\n      //       </div>\n      //     )}\n      //     {this.state.posts.length <= 0 && !this.state.postsLoading ? (\n      //       <p style={{ textAlign: 'center' }}>No posts found.</p>\n      //     ) : null}\n      //     {!this.state.postsLoading && (\n      //       <Paginator\n      //         onPrevious={this.loadPosts.bind(this, 'previous')}\n      //         onNext={this.loadPosts.bind(this, 'next')}\n      //         lastPage={Math.ceil(this.state.totalPosts / 2)}\n      //         currentPage={this.state.postPage}\n      //       >\n      //         {this.state.posts.map(post => (\n      //           <Post\n      //             key={post._id}\n      //             id={post._id}\n      //             author={post.creator.name}\n      //             date={new Date(post.createdAt).toLocaleDateString('en-US')}\n      //             title={post.title}\n      //             image={post.imageUrl}\n      //             content={post.content}\n      //             onStartEdit={this.startEditPostHandler.bind(this, post._id)}\n      //             onDelete={this.deletePostHandler.bind(this, post._id)}\n      //           />\n      //         ))}\n      //       </Paginator>\n      //     )}\n      //   </section>\n      // </Fragment>\n      ;\n    }\n  }]);\n\n  return Food;\n}(Component);\n\nexport default Food;","map":{"version":3,"sources":["C:/Users/NguyenDucTuan/Desktop/07-frontend-updating-a-post/src/pages/Feed/Food.js"],"names":["React","Component","Fragment","Food","state","isEditing","posts","totalPosts","editPost","status","postPage","postsLoading","editLoading","loadPosts","direction","setState","page","method","url","_id","fetch","body","formData","then","res","Error","json","resData","map","post","imagePath","imageUrl","totalItems","catch","catchError","statusUpdateHandler","event","preventDefault","console","log","newPostHandler","startEditPostHandler","postId","prevState","loadedPost","find","p","cancelEditHandler","finishEditHandler","postData","FormData","append","title","content","image","creator","createdAt","updatedPosts","postIndex","findIndex","length","concat","err","error","statusInputChangeHandler","input","value","deletePostHandler","filter","errorHandler","props","userId"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\n\n// import Post from '../../components/Feed/Post/Post';\n// import Button from '../../components/Button/Button';\n// import FeedEdit from '../../components/Feed/FeedEdit/FeedEdit';\n// import Input from '../../components/Form/Input/Input';\n// import Paginator from '../../components/Paginator/Paginator';\n// import Loader from '../../components/Loader/Loader';\n// import ErrorHandler from '../../components/ErrorHandler/ErrorHandler';\nimport './Food.css';\n\nclass Food extends Component {\n  state = {\n    isEditing: false,\n    posts: [],\n    totalPosts: 0,\n    editPost: null,\n    status: '',\n    postPage: 1,\n    postsLoading: true,\n    editLoading: false\n  };\n\n  componentDidMount() {\n    fetch('URL')\n      .then(res => {\n        if (res.status !== 200) {\n          throw new Error('Failed to fetch user status.');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        this.setState({ status: resData.status });\n      })\n      .catch(this.catchError);\n\n    this.loadPosts();\n  }\n\n  loadPosts = direction => {\n    if (direction) {\n      this.setState({ postsLoading: true, posts: [] });\n    }\n    let page = this.state.postPage;\n    if (direction === 'next') {\n      page++;\n      this.setState({ postPage: page });\n    }\n    if (direction === 'previous') {\n      page--;\n      this.setState({ postPage: page });\n    }\n    let method = 'GET';\n    if (this.state.editPost) {\n      url = 'http://localhost:8080/feed/post/' + this.state.editPost._id;\n      method = 'PUT';\n    }\n\n    fetch(url, {\n      method: method,\n      body: formData\n    })\n    fetch('http://localhost:3001/product/getProducts')\n      .then(res => {\n        if (res.status !== 200) {\n          throw new Error('Failed to fetch posts.');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        this.setState({\n          posts: resData.posts.map(post => {\n            return {\n              ...post,\n              imagePath: post.imageUrl\n            };\n          }),\n          totalPosts: resData.totalItems,\n          postsLoading: false\n        });\n      })\n      .catch(this.catchError);\n  };\n\n  statusUpdateHandler = event => {\n    event.preventDefault();\n    fetch('URL')\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error(\"Can't update status!\");\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(resData);\n      })\n      .catch(this.catchError);\n  };\n\n  newPostHandler = () => {\n    this.setState({ isEditing: true });\n  };\n\n  startEditPostHandler = postId => {\n    this.setState(prevState => {\n      const loadedPost = { ...prevState.posts.find(p => p._id === postId) };\n\n      return {\n        isEditing: true,\n        editPost: loadedPost\n      };\n    });\n  };\n\n  cancelEditHandler = () => {\n    this.setState({ isEditing: false, editPost: null });\n  };\n\n  finishEditHandler = postData => {\n    this.setState({\n      editLoading: true\n    });\n    const formData = new FormData();\n    formData.append('title', postData.title);\n    formData.append('content', postData.content);\n    formData.append('image', postData.image);\n    let url = 'http://localhost:8080/feed/post';\n    let method = 'POST';\n    if (this.state.editPost) {\n      url = 'http://localhost:8080/feed/post/' + this.state.editPost._id;\n      method = 'PUT';\n    }\n\n    fetch(url, {\n      method: method,\n      body: formData\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Creating or editing a post failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(resData);\n        const post = {\n          _id: resData.post._id,\n          title: resData.post.title,\n          content: resData.post.content,\n          creator: resData.post.creator,\n          createdAt: resData.post.createdAt\n        };\n        this.setState(prevState => {\n          let updatedPosts = [...prevState.posts];\n          if (prevState.editPost) {\n            const postIndex = prevState.posts.findIndex(\n              p => p._id === prevState.editPost._id\n            );\n            updatedPosts[postIndex] = post;\n          } else if (prevState.posts.length < 2) {\n            updatedPosts = prevState.posts.concat(post);\n          }\n          return {\n            posts: updatedPosts,\n            isEditing: false,\n            editPost: null,\n            editLoading: false\n          };\n        });\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({\n          isEditing: false,\n          editPost: null,\n          editLoading: false,\n          error: err\n        });\n      });\n  };\n\n  statusInputChangeHandler = (input, value) => {\n    this.setState({ status: value });\n  };\n\n  deletePostHandler = postId => {\n    this.setState({ postsLoading: true });\n    fetch('URL')\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Deleting a post failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(resData);\n        this.setState(prevState => {\n          const updatedPosts = prevState.posts.filter(p => p._id !== postId);\n          return { posts: updatedPosts, postsLoading: false };\n        });\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({ postsLoading: false });\n      });\n  };\n\n  errorHandler = () => {\n    this.setState({ error: null });\n  };\n\n  catchError = error => {\n    this.setState({ error: error });\n  };\n\n  render() {\n    return (\n      <div>TUấn đã vào đây trang FoodPage\n        <p>Dây là userId{this.props.userId }</p>\n\n      </div>\n      // <Fragment>\n      //   <ErrorHandler error={this.state.error} onHandle={this.errorHandler} />\n      //   <FeedEdit\n      //     editing={this.state.isEditing}\n      //     selectedPost={this.state.editPost}\n      //     loading={this.state.editLoading}\n      //     onCancelEdit={this.cancelEditHandler}\n      //     onFinishEdit={this.finishEditHandler}\n      //   />\n      //   <section className=\"feed__status\">\n      //     <form onSubmit={this.statusUpdateHandler}>\n      //       <Input\n      //         type=\"text\"\n      //         placeholder=\"Your status\"\n      //         control=\"input\"\n      //         onChange={this.statusInputChangeHandler}\n      //         value={this.state.status}\n      //       />\n      //       <Button mode=\"flat\" type=\"submit\">\n      //         Update\n      //       </Button>\n      //     </form>\n      //   </section>\n      //   <section className=\"feed__control\">\n      //     <Button mode=\"raised\" design=\"accent\" onClick={this.newPostHandler}>\n      //       New Post\n      //     </Button>\n      //   </section>\n      //   <section className=\"feed\">\n      //     {this.state.postsLoading && (\n      //       <div style={{ textAlign: 'center', marginTop: '2rem' }}>\n      //         <Loader />\n      //       </div>\n      //     )}\n      //     {this.state.posts.length <= 0 && !this.state.postsLoading ? (\n      //       <p style={{ textAlign: 'center' }}>No posts found.</p>\n      //     ) : null}\n      //     {!this.state.postsLoading && (\n      //       <Paginator\n      //         onPrevious={this.loadPosts.bind(this, 'previous')}\n      //         onNext={this.loadPosts.bind(this, 'next')}\n      //         lastPage={Math.ceil(this.state.totalPosts / 2)}\n      //         currentPage={this.state.postPage}\n      //       >\n      //         {this.state.posts.map(post => (\n      //           <Post\n      //             key={post._id}\n      //             id={post._id}\n      //             author={post.creator.name}\n      //             date={new Date(post.createdAt).toLocaleDateString('en-US')}\n      //             title={post.title}\n      //             image={post.imageUrl}\n      //             content={post.content}\n      //             onStartEdit={this.startEditPostHandler.bind(this, post._id)}\n      //             onDelete={this.deletePostHandler.bind(this, post._id)}\n      //           />\n      //         ))}\n      //       </Paginator>\n      //     )}\n      //   </section>\n      // </Fragment>\n    );\n  }\n}\n\nexport default Food;\n"]},"metadata":{},"sourceType":"module"}